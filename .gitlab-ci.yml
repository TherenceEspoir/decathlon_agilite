stages:
  - build
  - test
  - deploy
  - sonarcloud
  - release

image: python:3.8-slim-buster

before_script:
  - pip install -r dev-requirements.txt
  - source .env

build:
  stage: build
  script:
    - python -m build

test:
  stage: test
  script:
    - pip install .
    - pytest --junitxml=report.xml --cov=test
  artifacts:
    when: always
    reports:
      junit: report.xml

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG # Run this job when a tag is created
  before_script:
    - echo "Prepare new release"
  script:
    - echo "Running release_job"
  release: # See https://docs.gitlab.com/ee/ci/yaml/#release
    tag_name: '$CI_COMMIT_TAG'
    description: '$CI_COMMIT_TAG'

variables:
  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
  GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task

sonarcloud-check:
  stage: sonarcloud
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - pip install -e .
    - pytest -v -o junit_family=xunit1 --cov=src --cov-report xml:test/coverage.xml --junitxml=test/nosetests.xml
    - pylint --exit-zero --disable=C0303,R0902 --output pylint-report.txt src
    - sonar-scanner -Dsonar.qualitygate.wait=true
  allow_failure: true
  rules:
    - if: $CI_COMMIT_REF_NAME == 'develop2' || $CI_PIPELINE_SOURCE == 'merge_request_event' 
      when: always

